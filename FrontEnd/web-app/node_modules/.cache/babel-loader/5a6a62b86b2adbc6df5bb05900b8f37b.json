{"ast":null,"code":"var _jsxFileName = \"/Users/kylepearce/Desktop/dev/Personal/OnlinePortfolio/FrontEnd/web-app/src/Home.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myInfo: []\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}myInfo`, {\n      method: 'GET',\n      credentials: 'include'\n    });\n    const myInfo = await response.json();\n    this.setState({\n      myInfo\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  componentWillUnmount() {}\n\n  render() {\n    const {\n      myInfo\n    } = this.state;\n    console.log(myInfo);\n\n    if (!myInfo) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-list\",\n        children: myInfo.map(({\n          name,\n          cv_img,\n          description,\n          email,\n          github_link,\n          linkedin_link\n        }) => /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"name: \", name, \", cv_img: \", cv_img, \", description: \", description, \", email=\", email, \", github_link: \", github_link, \", linkedin_link: \", linkedin_link]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/kylepearce/Desktop/dev/Personal/OnlinePortfolio/FrontEnd/web-app/src/Home.js"],"names":["React","Component","Home","constructor","props","state","myInfo","componentDidMount","response","fetch","process","env","REACT_APP_API_URL","method","credentials","json","setState","componentDidUpdate","prevProps","prevState","componentWillUnmount","render","console","log","map","name","cv_img","description","email","github_link","linkedin_link"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAIzBE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAFnBC,KAEmB,GAFX;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAEW;AAElB;;AAEsB,QAAjBC,iBAAiB,GAAG;AACtB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,QAAlC,EAA2C;AACnEC,MAAAA,MAAM,EAAE,KAD2D;AAEnEC,MAAAA,WAAW,EAAE;AAFsD,KAA3C,CAA5B;AAIA,UAAMR,MAAM,GAAG,MAAME,QAAQ,CAACO,IAAT,EAArB;AACA,SAAKC,QAAL,CAAc;AAAEV,MAAAA;AAAF,KAAd;AACH;;AAEDW,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAExC;;AAEDC,EAAAA,oBAAoB,GAAG,CAEtB;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEf,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;;AACA,QAAI,CAACA,MAAL,EAAa;AACT,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAIO;AACH,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACKA,MAAM,CAACkB,GAAP,CAAW,CAAC;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,MAAR;AAAgBC,UAAAA,WAAhB;AAA6BC,UAAAA,KAA7B;AAAoCC,UAAAA,WAApC;AAAiDC,UAAAA;AAAjD,SAAD,kBACR;AAAA,+BAAWL,IAAX,gBAA2BC,MAA3B,qBAAkDC,WAAlD,cAAuEC,KAAvE,qBAA6FC,WAA7F,uBAA2HC,aAA3H;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;AACJ;;AAzCwB;;AA6C7B,eAAe5B,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Home extends Component {\n\n    state = { myInfo: [] }\n\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}myInfo`, {\n            method: 'GET',\n            credentials: 'include'\n        })\n        const myInfo = await response.json()\n        this.setState({ myInfo })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        const { myInfo } = this.state;\n        console.log(myInfo);\n        if (!myInfo) {\n            return (\n                <h1>Loading...</h1>\n            );\n        } else {\n            return (\n                <div className='item-list'>\n                    {myInfo.map(({ name, cv_img, description, email, github_link, linkedin_link }) =>\n                        <h1>name: {name}, cv_img: {cv_img}, description: {description}, email={email}, github_link: {github_link}, linkedin_link: {linkedin_link}</h1>\n                    )}\n                </div>\n            );\n        }\n    }\n\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}